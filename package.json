{
  "name": "veare",
  "description": "veare website",
  "version": "1.0.0",
  "main": "app/server.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukasoppermann/veare.git"
  },
  "author": "Lukas Oppermann",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/lukasoppermann/veare/issues"
  },
  "homepage": "https://github.com/lukasoppermann/veare#readme",
  "devDependencies": {
    "@types/jest": "^24.0.23",
    "@typescript-eslint/parser": "^2.8.0",
    "acorn": "^7.1.0",
    "check-links": "^1.1.8",
    "eslint": "^6.7.0",
    "eslint-plugin-typescript": "^0.14.0",
    "fetch-inject": "^2.0.4",
    "glob": "^7.1.6",
    "jest": "^24.9.0",
    "node-file-rev": "^1.1.2",
    "node-sass": "^4.13.0",
    "onchange": "^6.1.0",
    "pre-commit": "^1.2.2",
    "pre-push": "^0.1.1",
    "rollup": "^1.27.4",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-replace": "^2.2.0",
    "rollup-plugin-terser": "^5.1.2",
    "rollup-plugin-typescript": "^1.0.1",
    "snazzy": "^8.0.0",
    "standard": "^14.3.1",
    "stylelint": "^12.0.0",
    "stylelint-config-standard": "^19.0.0",
    "ts-node-dev": "^1.0.0-pre.44",
    "ttab": "^0.6.1",
    "typescript-lit-html-plugin": "^0.9.0"
  },
  "dependencies": {
    "@contentful/rich-text-html-renderer": "^13.4.0",
    "@contentful/rich-text-types": "^13.4.0",
    "@popeindustries/lit-html-server": "^1.6.0",
    "@types/contentful-resolve-response": "^0.1.30",
    "@types/express": "^4.17.2",
    "@types/helmet": "0.0.45",
    "@types/highlight.js": "^9.12.3",
    "@types/node": "^12.12.12",
    "animejs": "^3.1.0",
    "compression": "^1.7.4",
    "contentful": "^7.10.0",
    "dns-sync": "^0.2.0",
    "dotenv-safe": "^8.2.0",
    "express": "^4.17.1",
    "express-basic-auth": "^1.2.0",
    "flat-cache": "^2.0.1",
    "forever": "^1.0.0",
    "greenlock-express": "^2.7.17",
    "greenlock-store-fs": "^3.0.2",
    "helmet": "^3.21.2",
    "highlight.js": "^9.16.2",
    "lit-html": "^1.1.2",
    "markdown-it": "^10.0.0",
    "markdown-it-anchor": "^5.2.5",
    "markdown-it-attrs": "^3.0.1",
    "markdown-it-expand-tabs": "^1.0.13",
    "markdown-it-implicit-figures": "^0.9.0",
    "markdown-it-modify-token": "^1.0.2",
    "memory-cache": "^0.2.0",
    "merge-options": "^2.0.0",
    "reading-time": "^1.2.0",
    "striptags": "^3.1.1",
    "svgo": "^1.3.2",
    "ts-node": "^8.5.2",
    "tslib": "^1.10.0",
    "typescript": "^3.7.2",
    "uuid": "^3.3.3"
  },
  "config": {
    "moveFilesJs": "node_modules/fetch-inject/dist/fetch-inject.min.js"
  },
  "standard": {
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "typescript"
    ]
  },
  "scripts": {
    "server": "NODE_ENV=production forever start -c 'node_modules/.bin/ts-node' $npm_package_main -m 5000 --pretty",
    "start": "node_modules/.bin/ttab -t 'Node Server' 'NODE_ENV=development npm run ts-node-dev' && node_modules/.bin/ttab -t 'Building assets' 'npm run build'",
    "ts-node-dev": "ts-node-dev --respawn $npm_package_main --pretty",
    "dev-server": "forever stopall && echo 'Running on http://localhost:8080' && NODE_ENV=development forever start -c 'node_modules/.bin/ts-node' $npm_package_main -m 5000 --pretty && forever list",
    "test-server": "forever stopall && NODE_ENV=test forever start -c 'node_modules/.bin/ts-node' $npm_package_main",
    "forever-stop": "forever stopall && forever list",
    "build": "npm run build:js:watch & npm run build:css:watch",
    "build:css:watch": "onchange -k -i 'resources/css/*/*.scss' -- npm run build:css",
    "build:css": "npm run css:clean && npm run css:compile && npm run css:rev",
    "css:clean": "rm -f public/css/*",
    "css:compile:slim": "node-sass --output-style compressed -o public/css/ resources/css/slim/slim.scss",
    "css:compile": "npm run css:compile:slim && node-sass --output-style compressed -o public/css/ resources/css/bundles/",
    "css:rev": "node-file-rev public/css/*.css --manifest=public/rev-manifest.json --root=public/",
    "build:js:watch": "onchange -k -i 'resources/js/*.ts' 'resources/ts/*/*.ts' -- npm run build:js",
    "build:js": "npm run js:clean && npm run js:compile && npm run js:rev && npm run js:move",
    "js:clean": "rm -f public/js/*",
    "js:move": "cp $npm_package_config_moveFilesJs public/js/",
    "js:compile": "rollup --config --environment FETCHINJECTVERSION:$(npm list --depth=0 | grep fetch-inject | sed 's/[^0-9.]*\\([0-9.]*\\).*/\\1/')",
    "js:rev": "node-file-rev public/js/*.js --manifest=public/rev-manifest.json --root=public/",
    "test": "npm run test:js",
    "test:all": "npm run test:css && NODE_PORT=3300 npm run test-server && NODE_PORT=3300 npm run test:js && NODE_PORT=3300 npm run test:integration && forever stopall",
    "test:js": "jest tests/unit && standard --parser typescript-eslint-parser --plugin typescript 'app.js' 'resources/js/*.ts' 'app/**/*.js' | snazzy",
    "test:integration": "jest tests/integration",
    "test:css": "stylelint resources/css",
    "travis": "npm run build:css && npm run build:js && npm run test:all",
    "removeCompiled": "branch=$(git branch | grep \\* | cut -d ' ' -f2) && if test \"$branch\" != \"master\" ; then git reset HEAD public/ ; fi",
    "release": "git checkout latest-build && npm run build && git add dist/*.js dist/*.js.map -f && git commit -m 'create build'",
    "standard": "standard --parser typescript-eslint-parser --plugin typescript 'app.js' 'resources/js/*.ts' 'app/**/*.js' | snazzy"
  },
  "pre-commit": [
    "test",
    "removeCompiled"
  ],
  "pre-push": [
    "test:all"
  ]
}
