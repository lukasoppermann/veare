{
  "name": "veare",
  "description": "veare website",
  "version": "1.16.19",
  "main": "app/server.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukasoppermann/veare.git"
  },
  "author": "Lukas Oppermann",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/lukasoppermann/veare/issues"
  },
  "homepage": "https://github.com/lukasoppermann/veare#readme",
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^9.0.0",
    "@rollup/plugin-replace": "^2.3.3",
    "@rollup/plugin-typescript": "^6.0.0",
    "@types/jest": "^26.0.14",
    "@types/jest-image-snapshot": "^4.1.0",
    "@types/puppeteer": "^3.0.2",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "eslint": "^7.9.0",
    "eslint-plugin-typescript": "^0.14.0",
    "fetch-inject": "^2.0.4",
    "jest": "^26.4.2",
    "jest-image-snapshot": "^4.2.0",
    "jest-puppeteer": "^4.4.0",
    "jest-runner-prettier": "^0.3.6",
    "node-file-rev": "^1.1.2",
    "node-sass": "^4.14.1",
    "onchange": "^7.0.2",
    "pre-commit": "^1.2.2",
    "puppeteer": "^5.3.0",
    "rollup": "^2.27.1",
    "rollup-plugin-terser": "^7.0.2",
    "snazzy": "^8.0.0",
    "standardx": "^5.0.0",
    "stylelint": "^13.7.1",
    "stylelint-config-standard": "^20.0.0",
    "ts-node-dev": "^1.0.0-pre.62",
    "typescript-lit-html-plugin": "^0.9.0"
  },
  "dependencies": {
    "@contentful/rich-text-html-renderer": "^14.1.1",
    "@contentful/rich-text-types": "^14.1.1",
    "@popeindustries/lit-html-server": "^3.1.0",
    "@types/contentful-resolve-response": "^0.1.30",
    "@types/helmet": "0.0.48",
    "@types/highlight.js": "^9.12.4",
    "@types/node": "^14.10.3",
    "animejs": "^3.1.0",
    "basic-auth": "^2.0.1",
    "body-parser": "^1.19.0",
    "compression": "git+https://github.com/Icehunter/compression.git#bugfix/use_writeHead_instead_of_implicitHeader",
    "connect": "^3.7.0",
    "contentful": "^7.14.6",
    "dns-sync": "^0.2.1",
    "dotenv-safe": "^8.2.0",
    "flat-cache": "^2.0.1",
    "forever": "^3.0.2",
    "greenlock-express": "^4.0.3",
    "helmet": "^4.1.1",
    "highlight.js": "^10.2.0",
    "memory-cache": "^0.2.0",
    "reading-time": "^1.2.0",
    "serve-static": "^1.14.1",
    "ts-jest": "^26.3.0",
    "ts-node": "^9.0.0",
    "tslib": "^2.0.1",
    "typescript": "^4.0.2"
  },
  "config": {
    "moveFilesJs": "node_modules/fetch-inject/dist/fetch-inject.min.js"
  },
  "eslintConfig": {
    "rules": {
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "error"
    }
  },
  "standardx": {
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ]
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "no-descending-specificity": null,
      "at-rule-no-unknown": null,
      "selector-type-no-unknown": null,
      "rule-empty-line-before": null,
      "declaration-empty-line-before": null,
      "custom-property-empty-line-before": null,
      "at-rule-empty-line-before": null,
      "number-leading-zero": null
    }
  },
  "jest": {
    "preset": "jest-puppeteer",
    "verbose": true,
    "testTimeout": 15000,
    "collectCoverage": false,
    "coverageDirectory": "./tests/unit/coverage",
    "collectCoverageFrom": [
      "./app/transformer/*.ts",
      "./app/services/*.ts"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "testMatch": [
      "**/tests/integration/!(skip.)*.test.[jt]s?(x)",
      "**/tests/unit/!(skip.)*.test.[jt]s?(x)"
    ]
  },
  "scripts": {
    "start": "ts-node-dev --respawn $npm_package_main --pretty",
    "server": "NODE_ENV=production forever start -c 'node_modules/.bin/ts-node' $npm_package_main -m 5000 --pretty",
    "restart-server": "forever stopall && npm run server",
    "forever-stop": "forever stopall && forever list",
    "build": "npm run build:js:watch & npm run build:css:watch",
    "build:css:watch": "onchange -k -i 'resources/css/**/*.scss' -- npm run build:css",
    "build:css": "rm -f public/css/* && npm run css:compile && npm run css:rev",
    "css:clean": "rm -f public/css/*",
    "css:compile": "node-sass --output-style compressed -o public/css/ resources/css/bundles/",
    "css:rev": "node-file-rev public/css/*.css --manifest=public/rev-manifest.json --root=public/",
    "build:js:watch": "onchange -k -i 'resources/js/*.ts' 'resources/ts/*/*.ts' -- npm run build:js",
    "build:js": "npm run js:clean && npm run js:compile && npm run js:rev && npm run js:move",
    "js:clean": "rm -f public/js/*",
    "js:move": "cp $npm_package_config_moveFilesJs public/js/",
    "js:compile": "rollup --config --environment FETCHINJECTVERSION:$(npm list --depth=0 | grep fetch-inject | sed 's/[^0-9.]*\\([0-9.]*\\).*/\\1/')",
    "js:rev": "node-file-rev public/js/*.js --manifest=public/rev-manifest.json --root=public/",
    "test:css": "stylelint resources/css",
    "tsc": "tsc --noEmit --pretty",
    "standard": "standardx 'app.js' 'resources/js/*.ts' 'app/**/*.js' 'app/**/*.ts' | snazzy",
    "test:integration": "jest tests/integration --detectOpenHandles --setupFilesAfterEnv=./tests/integration/ui.setup.js",
    "test:unit": "jest tests/unit --coverage",
    "test:js": "npm run tsc && npm run test:unit && npm run standard",
    "test": "npm run test:js && npm run test:css",
    "removeCompiled": "branch=$(git branch | grep \\* | cut -d ' ' -f2) && if test \"$branch\" != \"master\" ; then git reset HEAD public/ ; fi"
  },
  "pre-commit": [
    "standard",
    "tsc",
    "test:css",
    "removeCompiled"
  ]
}
