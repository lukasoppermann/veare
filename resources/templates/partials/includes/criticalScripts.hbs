<script type="text/javascript" async>
const webComponentsSupported = () => {
  return 'registerElement' in document &&
  typeof document.createElement('div').attachShadow === 'function' &&
  'content' in document.createElement('template')
}
// get correct file name
const revisionedFiles = fetch('/revisionedFiles').then(response => {
  return response.json()
})
// get fetchInject class
const scriptPromise = new Promise((resolve, reject) => {
  const script = window.document.createElement('script');
  window.document.head.appendChild(script);
  script.onload = resolve;
  script.onerror = reject;
  script.async = true;
  script.src = 'js/fetch-inject.min.js';
});

Promise.all([revisionedFiles, scriptPromise])
.then(results => {
  let json = results[0]
  fetchInject([
    // critical js
    // `/${json.commonjs}`
  ]).then(() => {
    if (!webComponentsSupported()) {
      return fetchInject([
        // polyfill
        `/js/webcomponents-sd-ce.js`
      ]).then( () => {
        console.log('WC loaded')
      })
    }
  })
  // WC available
  .then(() => {
    return fetchInject([
      `/${json.setConfigjs}`,
      `/${json.webcomponentsjs}`
    ]).then(() => {
      setConfig(window)
      console.log('Ã¤hh no')
    })
  })
  // unimportant rest
  .then(() => {
    console.log('last')
    return fetchInject([
      `/${json.restjs}`
    ])
  })
})
</script>
{{!-- <script src="/{{files.indexjs}}"></script> --}}
