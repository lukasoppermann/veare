<script type="text/javascript" async>

const webComponentsSupported = () => {
  return 'registerElement' in document &&
  typeof document.createElement('div').attachShadow === 'function' &&
  'content' in document.createElement('template')
}
// get correct file name
const revisionedFiles = fetch('/revisionedFiles').then(response => {
  return response.json()
})
// get fetchInject class
const scriptPromise = new Promise((resolve, reject) => {
  const script = window.document.createElement('script');
  window.document.head.appendChild(script);
  script.onload = resolve;
  script.onerror = reject;
  script.async = true;
  script.src = '/js/fetch-inject.min.js';
})

Promise.all([revisionedFiles, scriptPromise])
.then(results => {
  let json = results[0]
  // make sure WC are working
  const webComponentsAvailable = new Promise((resolve, reject) => {
    if (!webComponentsSupported()) {
      return fetchInject([
        // polyfill
        `/js/webcomponents-sd-ce.js`
      ]).then(() => {
        resolve()
      })
    }
    resolve()
  })
  // load critical layout components
  const layoutComponents = fetchInject([`/${json['js/layoutComponents.js']}`], webComponentsAvailable);
  // load webfont and view intro once downloaded
  fetchInject([
    `https://fonts.googleapis.com/css?family=Noto+Serif:400,400i|Source+Sans+Pro:400,600`
  ], layoutComponents)
  .then(() => {
    document.querySelector('.c-section--intro').style.opacity = "1"
  }, () => {
    document.querySelector('.c-section--intro').style.opacity = "1"
  })

  // load responsiveMenu
  fetchInject([
    `/${json['js/responsiveMenu.js']}`
  ], webComponentsAvailable)
  .then(() => {
    document.querySelector('responsive-menu').style.display = "block"
  })
  // Promise.all([webComponentsAvailable, criticalWCs])
  // .then(() => {
  //   setConfig(window)
  //   console.log('Ã¤hh no')
  // }, () => {
  //   console.log('Nooooooo')
  // })
  // Promise.all([webComponentsAvailable, fetchInject([
  //     `/${json.responsiveMenujs}`
  //   ])
  // ]).then(() => {
  //   console.log('yo')
  //   document.querySelector('responsive-menu').style.display = 'block'
  // })
  // // unimportant rest
  // .then(() => {
  //   console.log('last')
  //   return fetchInject([
  //     `/${json.restjs}`
  //   ])
  // })
})
</script>
{{!-- <script src="/{{files.indexjs}}"></script> --}}
